@model PaginatedList<DemoLinq.Models.Lieu>

@{
    ViewData["Title"] = "Index";

    // Conserver les paramètres de filtres ou de recherche
    var FiltreTaille = ViewBag.FiltreTaille ?? "";
    var Filtre = ViewBag.Filtre ?? "";
    var Search = ViewBag.Search ?? "";

    var id = ViewBag.FiltreTaille ?? ViewBag.Filtre ?? "";

    // Conserver l'action de contrôleur à rappeler si on a utilisé un filtre ou une recherche
    var action = "Index";
    if (FiltreTaille != "") action = "FiltreTaille";
    else if (Filtre != "") action = "Filtre";
    else if (Search != "") action = "Search";

    var l = new DemoLinq.Models.Lieu();
}

<h1>Index</h1>
<p>Nb de visites : @ViewBag.Compteur</p>
<form asp-controller="Lieux" asp-action="Search" method="get">
    <input type="text" name="recherche" id="recherche"/>
    <input type="submit" value="Chercher"/>
</form>
@ViewBag.Json résultats
<a asp-controller="Lieux" asp-action="Filtre" asp-route-id="Monument" class="btn btn-primary">
    Monuments
    </a>
<a asp-controller="Lieux" asp-action="Filtre" asp-route-id="Lac" class="btn btn-primary">
    Lacs
</a>
<a asp-controller="Lieux" asp-action="Filtre" asp-route-id="Ville" class="btn btn-primary">
    Villes
</a>
<a asp-controller="Lieux" asp-action="FiltreTaille" asp-route-id="Petits" class="btn btn-primary">
    Petits
</a>
<a asp-controller="Lieux" asp-action="FiltreTaille" asp-route-id="Moyens" class="btn btn-primary">
    Moyens
</a>
<a asp-controller="Lieux" asp-action="FiltreTaille" asp-route-id="Grands" class="btn btn-primary">
    Grands
</a>
<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(_ => l.Nom)
            </th>
            <th>
                @Html.DisplayNameFor(_ => l.Description)
            </th>
            <th>@Html.DisplayNameFor(_ => l.Type)
            </th>
            <th>@Html.DisplayNameFor(_ => l.Latitude)
            </th>
            <th>
                @Html.DisplayNameFor(_ => l.Longitude)
            </th>
            <th>
                @Html.DisplayNameFor(_ => l.Superficie)
            </th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Nom)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Type)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Latitude)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Longitude)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Superficie)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
@{
    // Gérer la pagination, avec des boutons << < > >>
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<a asp-action=@action
   asp-route-id=@id
   asp-route-recherche=@ViewBag.Search
   asp-route-pageNumber="@(1)"
   class="btn btn-secondary @prevDisabled">
    &lt;&lt;
</a> |
<a asp-action=@action
   asp-route-id=@id
   asp-route-recherche=@ViewBag.Search
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   class="btn btn-secondary @prevDisabled">
    &lt;
</a> |
<a asp-action=@action
   asp-route-id=@id
   asp-route-recherche=@ViewBag.Search
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   class="btn btn-secondary @nextDisabled">
    &gt;
</a> |
<a asp-action=@action
   asp-route-id=@id
   asp-route-recherche=@ViewBag.Search
   asp-route-pageNumber="@(Model.TotalPages)"
   class="btn btn-secondary @nextDisabled">
    &gt;&gt;
</a>
